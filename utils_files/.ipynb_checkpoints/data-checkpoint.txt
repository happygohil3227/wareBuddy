# Create a dictionary to capture the farm coordinates (10 miles) and collection requirements (1,000).

farms, coordinates, collect  = gp.multidict({
    0: [(0,0),0],
    1: [(-3,3),5],
    2: [(1,11),4],
    3: [(4,7),3],
    4: [(-5,9),6],
    5: [(-5,-2),7],
    6: [(-4,-7),3],
    7: [(6,0),4],
    8: [(3,-6),6],
    9: [(-1,-3),5],
    10: [(0,-6),4],
    11: [(6,4),7], 
    12: [(2,5),3],
    13: [(-2,8),4],
    14: [(6,10),5],
    15: [(1,8),6],
    16: [(-3,1),8],
    17: [(-6,5),5],
    18: [(2,9),7],
    19: [(-6,-5),6],
    20: [(5,-4),6]
})

# List of farm  including the depot
farms = [*range(0,21)]

# List of farms that are visited everyday
everyDay = [*range(0,10)]

# List of farms that are visited each other day
otherDay = [*range(10,21)]

# List of day types
dayType = [1,2]

# Tanker lorry capacity (1,000)
tankerCap = 80

# Every day farms requirements
everyDayReq = 0
for i in everyDay:
    everyDayReq += collect[i]


# Compute pairwise distance matrix
# numpy linalg norm = euclidean n=2

def distance(city1, city2):
    c1 = coordinates[city1]
    c2 = coordinates[city2]
    diff = (c1[0]-c2[0], c1[1]-c2[1])
    return math.sqrt(diff[0]*diff[0]+diff[1]*diff[1])

dist = {(c1, c2): distance(c1, c2) for c1, c2 in combinations(farms, 2)}